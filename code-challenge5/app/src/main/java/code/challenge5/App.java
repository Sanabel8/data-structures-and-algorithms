/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package code.challenge5;
public class App {
  public String getGreeting() {
        return "Hello World!";
    }
    public static void main(String[] args) {
      System.out.println(new App().getGreeting());


      LinkedList test = new LinkedList();
      test.insert(1);
      test.insert(66);
//      System.out.println(test.insert(11));

      test.includes(5);
      test.tostring();

      test.append(3);
      test.append(20);
      test.append(40);
      test.append(100);
      System.out.println(test.append(100));
      System.out.println(test.append(20));
      System.out.println(test.append(40));

      System.out.println("----------------------------------------------");
      LinkedList test3 = new LinkedList();
      test3.append(2);
      test3.append(22);
      test3.append(222);
      test3.append(2222);
      test3.insertBefore(2, 0);
      System.out.println("insert before"+test3.tostring());

      System.out.println("----------------------------------------------");
      LinkedList test2 = new LinkedList();
      test2.append(2);
      test2.append(22);
      test2.append(222);
      test2.append(2222);
      test2.insertAfter(222, 0);
      System.out.println("insert After"+test2.tostring());

      System.out.println("----------------------------------------------");

      test.kLocation(3);
      System.out.println(test.kLocation(3));

      System.out.println("-merging---------------------------------------------");
      LinkedList list4=new LinkedList();
      LinkedList list5=new LinkedList();
      LinkedList mergList=new LinkedList();

      list4.append(8);
      list4.append(88);
      list4.append(888);
      System.out.println(list4.tostring());
      list5.append(1);
      list5.append(11);
      list5.append(111);

      LinkedList mergeList = new LinkedList();
      mergeList.head=mergeList.zipLists(list4,list5);
      String result = mergeList.tostring();
      System.out.println(result);

      LinkedList mergeList1 = new LinkedList();
      mergeList1.append(1);
      mergeList1.append(11);
      mergeList1.append(111);
      mergeList1.append(11);
      mergeList1.append(1);

//      LinkedList newList = new LinkedList();
//      boolean potato = newList.equality(testLL2);
//      System.out.println(potato);

      System.out.println("SSSSSSSSSS"+LinkedList.equality(mergeList1));

    }
}





