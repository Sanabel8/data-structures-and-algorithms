import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {


  public static void main(String[] args) {
    HashTable<String, Integer> books = new HashTable<>();

    books.add("The Great Gatsby",2);
    books.add("Passage to India", 5);
    books.add("Beloved", 7);
    books.add("To Kill a Mockingbird", 9);

    books.hash("To Kill a Mockingbird");
    System.out.println( "hash : "+books.hash("The Great Gatsby"));

    System.out.println("get value after added: "+books.get("The Great Gatsby"));

    System.out.println("false: because the book not added ...."+books.contains("Anna Karenina"));
    System.out.println("true: because the book is added ...."+books.contains("Beloved"));



////////////////////////////cc32 - insertion ////////////////////////

    Node root = new Node(2,55,1);
    root = new Node(9,8,7);
    root.left = new Node(1,4,5);
    root.right = new Node(54,45,10);
    root.left.left = new Node(1,45,0);
    root.right.left = new Node(4,5,6);
    root.right.right = new Node(5,76,1);
    root.right.right.right= new Node(5,100,1);

    BinaryTrees binaryTrees = new BinaryTrees(root);
    BinaryTrees bt = new BinaryTrees();
    //Add nodes to the binary tree
    bt.root = new Node(20,4,2);
    bt.root.left = new Node(25,5,6);
    bt.root.right = new Node(54,45,10);
    bt.root.left.left = new Node(74,1,1);
    bt.root.right.left = new Node(85,99,3);
    bt.root.right.right = new Node(22,76,4);
    bt.root.right.right.left = new Node(22,100,4);

    System.out.println(HashTable.insertionMethod(binaryTrees, bt));

    /////////////////cc33////////////////
    System.out.println("  ");
    System.out.println("code cjallenge 33");
      HashMap<String, String> hashMap1 = new HashMap<>();
      HashMap<String, String> hashMap2 = new HashMap<>();

    hashMap1.put("fond", "enamored");
    hashMap1.put("wrath", "anger");
    hashMap1.put("diligent", "employed");
    hashMap1.put("outfit", "garb");
    hashMap1.put("guide", "usher");

    hashMap2.put("fond", "averse");
    hashMap2.put("wrath", "delight");
    hashMap2.put("diligent", "idle");
    hashMap2.put("guide", "follow");
    hashMap2.put("flow", "jam");

      System.out.println(books.leftJoin(hashMap1,hashMap2));
    }
  }


